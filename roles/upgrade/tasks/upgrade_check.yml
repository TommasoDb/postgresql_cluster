---

- name: Get the current shared_preload_libraries settings
  command: psql -tAXc "show shared_preload_libraries"
  changed_when: false
  register: pg_shared_preload_libraries_result
  when:
    - inventory_hostname in groups['primary']

- name: 'Set the variable: pg_shared_preload_libraries_value'
  set_fact:
    pg_shared_preload_libraries_value: "{{ pg_shared_preload_libraries_result.stdout }}"
  when:
    - inventory_hostname in groups['primary']

- name: Verify the two clusters are compatible (pg_upgrade --check)
  command: >
    {{ pg_new_bindir }}/pg_upgrade
    --old-bindir {{ pg_old_bindir }}
    --new-bindir {{ pg_new_bindir }}
    --old-datadir {{ pg_old_datadir }}
    --new-datadir {{ pg_new_datadir }}
    --old-options "-c config_file={{ pg_old_confdir }}/postgresql.conf"
    --new-options "-c config_file={{ pg_new_confdir }}/postgresql.conf -c shared_preload_libraries='{{ pg_shared_preload_libraries_value }}'"
    --jobs={{ ansible_processor_vcpus }}
    --link
    --check
  changed_when: false
  register: pg_upgrade_check_result
  when:
    - inventory_hostname in groups['primary']

- name: Print the result of the pg_upgrade check
  debug:
    var: pg_upgrade_check_result.stdout_lines
  failed_when: "'Clusters are compatible' not in pg_upgrade_check_result.stdout"
  when:
    - inventory_hostname in groups['primary']

...
