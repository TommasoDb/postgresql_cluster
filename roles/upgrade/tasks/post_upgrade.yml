---

- name: Check the Patroni cluster state
  run_once: true
  become: true
  become_user: postgres
  command: "patronictl -c {{ patroni_config_file }} list"
  register: patronictl_result
  changed_when: false
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/bin:/usr/local/bin"

- name: Check the current PostgreSQL version
  run_once: true
  command: psql -tAXc "select current_setting('server_version')"
  register: postgres_version
  changed_when: false

# Return the pg_hba.conf file to its original state (if it has been changed)
- block:
    - name: Remove temporary local access rule for the "postgres" user 
      blockinfile:
        path: "{{ pg_new_confdir }}/pg_hba.conf"
        marker: "# {mark} ANSIBLE TEMPORARY pg_upgrade RULE"
        state: absent

    - name: Update the PostgreSQL configuration
      command: "{{ pg_new_bindir }}/pg_ctl reload -D {{ pg_new_datadir }}"
  when:
    - socket_access_result.stderr is defined
    - "'no pg_hba.conf entry' in socket_access_result.stderr"

# finish (info)
- name: List the Patroni cluster members
  run_once: true
  debug:
    msg: "{{ patronictl_result.stdout_lines }}"
  when: patronictl_result.stdout_lines is defined

- name: Upgrade completed
  run_once: true
  debug:
    msg:
      - "PostgreSQL upgrade completed."
      - "Current version: {{ postgres_version.stdout }}"
  when: postgres_version.stdout is defined

...
